// <auto-generated />
using System;
using CaseDAL.Concrete.MySQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CaseDAL.Migrations
{
    [DbContext(typeof(CaseContext))]
    [Migration("20230820215515_ProductUpdate")]
    partial class ProductUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CaseEntity.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("49d2c593-5c5e-4046-a984-c94c02024162"),
                            CreatedOn = new DateTime(2023, 8, 20, 21, 55, 15, 256, DateTimeKind.Utc).AddTicks(5745),
                            Description = "En kaliteli telefonlar",
                            IsDeleted = false,
                            Name = "Telefon"
                        },
                        new
                        {
                            Id = new Guid("c807175e-f87f-467a-b3b9-b32a5f5bc43b"),
                            CreatedOn = new DateTime(2023, 8, 20, 21, 55, 15, 256, DateTimeKind.Utc).AddTicks(5748),
                            Description = "En kaliteli tabletler",
                            IsDeleted = false,
                            Name = "Tablet"
                        },
                        new
                        {
                            Id = new Guid("a3869bda-8c5a-4732-8687-f4fb92978fa1"),
                            CreatedOn = new DateTime(2023, 8, 20, 21, 55, 15, 256, DateTimeKind.Utc).AddTicks(5749),
                            Description = "En kaliteli bilgisayarlar",
                            IsDeleted = false,
                            Name = "Bilgisayar"
                        });
                });

            modelBuilder.Entity("CaseEntity.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6452d99e-426d-4a3a-ba62-27bdcbd0f126"),
                            CategoryId = new Guid("49d2c593-5c5e-4046-a984-c94c02024162"),
                            CreatedOn = new DateTime(2023, 8, 20, 21, 55, 15, 256, DateTimeKind.Utc).AddTicks(5840),
                            Description = "En sağlam telefon",
                            ImageUrl = "1.jpg",
                            IsDeleted = false,
                            Name = "Iphone 14 Pro",
                            Price = 56000f,
                            Quantity = 5f,
                            Unit = "ADET"
                        },
                        new
                        {
                            Id = new Guid("4aef8c02-8012-4663-a6f0-c677cc81de11"),
                            CategoryId = new Guid("49d2c593-5c5e-4046-a984-c94c02024162"),
                            CreatedOn = new DateTime(2023, 8, 20, 21, 55, 15, 256, DateTimeKind.Utc).AddTicks(5843),
                            Description = "Güncel telefon",
                            ImageUrl = "2.jpg",
                            IsDeleted = false,
                            Name = "Iphone 13 ",
                            Price = 46000f,
                            Quantity = 15f,
                            Unit = "ADET"
                        },
                        new
                        {
                            Id = new Guid("15691289-8f57-47a8-aad9-0680e243a499"),
                            CategoryId = new Guid("c807175e-f87f-467a-b3b9-b32a5f5bc43b"),
                            CreatedOn = new DateTime(2023, 8, 20, 21, 55, 15, 256, DateTimeKind.Utc).AddTicks(5844),
                            Description = "Çocuklar için tablet",
                            ImageUrl = "3.jpg",
                            IsDeleted = false,
                            Name = "Galaxy TAB S7",
                            Price = 20000f,
                            Quantity = 3f,
                            Unit = "ADET"
                        },
                        new
                        {
                            Id = new Guid("6e3ad4c6-f92b-4c29-87b6-ae15736377b7"),
                            CategoryId = new Guid("c807175e-f87f-467a-b3b9-b32a5f5bc43b"),
                            CreatedOn = new DateTime(2023, 8, 20, 21, 55, 15, 256, DateTimeKind.Utc).AddTicks(5846),
                            Description = "İş tableti",
                            ImageUrl = "4.jpg",
                            IsDeleted = false,
                            Name = "Matepad SE",
                            Price = 25000f,
                            Quantity = 35f,
                            Unit = "ADET"
                        },
                        new
                        {
                            Id = new Guid("24262ab2-8372-41f8-808e-c386b779da42"),
                            CategoryId = new Guid("a3869bda-8c5a-4732-8687-f4fb92978fa1"),
                            CreatedOn = new DateTime(2023, 8, 20, 21, 55, 15, 256, DateTimeKind.Utc).AddTicks(5858),
                            Description = "İş bilgisayarı",
                            ImageUrl = "5.jpg",
                            IsDeleted = false,
                            Name = "Hp Envy",
                            Price = 66000f,
                            Quantity = 5f,
                            Unit = "ADET"
                        },
                        new
                        {
                            Id = new Guid("07487811-8537-4ec6-b9aa-a980e76ead12"),
                            CategoryId = new Guid("a3869bda-8c5a-4732-8687-f4fb92978fa1"),
                            CreatedOn = new DateTime(2023, 8, 20, 21, 55, 15, 256, DateTimeKind.Utc).AddTicks(5860),
                            Description = "Oyun bilgisayarı",
                            ImageUrl = "6.jpg",
                            IsDeleted = false,
                            Name = "Monster Abra",
                            Price = 36000f,
                            Quantity = 5f,
                            Unit = "ADET"
                        });
                });

            modelBuilder.Entity("CaseEntity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61727065-8e2f-43fe-9334-ab80f32a13ea"),
                            CreatedOn = new DateTime(2023, 8, 20, 21, 55, 15, 256, DateTimeKind.Utc).AddTicks(5875),
                            Email = "aliiakcekoca@gmail.com",
                            FirstName = "Ali",
                            IsDeleted = false,
                            LastName = "Akçekoce",
                            Password = "qwerty12-"
                        });
                });

            modelBuilder.Entity("CaseEntity.Product", b =>
                {
                    b.HasOne("CaseEntity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CaseEntity.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
